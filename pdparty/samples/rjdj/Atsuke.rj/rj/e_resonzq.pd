#N canvas 83 33 1106 676 10;
#X obj 89 376 cpole~;
#X obj 89 446 cpole~;
#X obj 223 199 t a a;
#X obj 223 331 * 0;
#X obj 255 330 * 0;
#X obj 255 353 * -1;
#X obj 223 227 cos;
#X obj 255 227 sin;
#X obj 355 202 t b a b a a;
#X obj 429 348 *;
#X obj 429 322 t a a;
#X msg 429 373 1 \$1;
#X obj 429 398 -;
#X obj 482 500 sqrt;
#N canvas 441 218 450 300 demux 0;
#X obj 110 46 inlet;
#X obj 110 181 outlet;
#X obj 185 180 outlet;
#X obj 238 43 inlet;
#X obj 110 153 spigot 1;
#X obj 185 150 spigot 0;
#X obj 163 108 == 0;
#X connect 0 0 4 0;
#X connect 0 0 5 0;
#X connect 3 0 6 0;
#X connect 3 0 5 1;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 4 1;
#X restore 429 473 pd demux;
#X obj 429 443 * 0.5;
#X text 659 245 Variance gain: Variance gain is the gain achieved by
feeding white noise. To normalize variance gain \, multiply by the
square root of the peak gain normalization.;
#X text 657 313 This then will normalize the resonator such that the
output signal power equals the input signal power when the input signal
is white noise.;
#X text 659 131 The peak gain of a resonator normalized with zeroes
at -1 and 1 is: 2/(1-R^2). So we divide by that to get a peak gain
of 1 \, that is we multiply by (1-R^2)/2;
#X text 661 191 Peak gain means: If we send sine waves into the filter
\, then the peak gain is the maximum gain achieved at the peak gain
frequency.;
#N canvas 0 0 784 558 2piT 0;
#X obj 342 189 atan;
#X msg 342 165 1;
#X obj 342 282 / 44100;
#X obj 418 249 samplerate~;
#X msg 417 227 bang;
#X obj 342 143 t b b;
#X msg 357 115 bang;
#X obj 342 77 loadbang;
#X obj 206 203 inlet;
#X obj 206 335 outlet;
#X obj 206 299 *;
#X obj 342 218 * 8;
#X text 92 34 calculates input times 2*pi*T to get normalized radians
frequency;
#X connect 0 0 11 0;
#X connect 1 0 0 0;
#X connect 2 0 10 1;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X connect 5 1 3 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 10 0;
#X connect 10 0 9 0;
#X connect 11 0 2 0;
#X restore 223 173 pd 2piT;
#X obj 223 47 inlet;
#X obj 89 47 inlet~;
#X obj 89 68 rzero~ -1;
#X obj 89 87 rzero~ 1;
#N canvas 0 0 784 558 exp(-piBT) 0;
#X obj 206 203 inlet;
#X obj 206 385 outlet;
#X obj 206 299 *;
#X obj 277 189 atan;
#X msg 277 165 1;
#X floatatom 295 250 5 0 0 0 - - -;
#X obj 277 282 / 44100;
#X obj 353 249 samplerate~;
#X msg 352 227 bang;
#X obj 277 143 t b b;
#X obj 277 218 * -4;
#X msg 292 113 bang;
#X obj 277 83 loadbang;
#X obj 206 323 exp;
#X text 92 34 calculates exp of input times -pi*T to get normalized
radians frequency;
#X connect 0 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 6 0 2 1;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 9 0 4 0;
#X connect 9 1 7 0;
#X connect 10 0 5 0;
#X connect 10 0 6 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 1 0;
#X restore 355 165 pd exp(-piBT);
#X obj 355 49 inlet;
#X text 229 25 fc (Hz);
#X text 374 186 R = exp(-PI*B*T);
#X obj 544 46 inlet;
#X text 649 93 Peak gain normalized resonator (Csound's "resonz" opcode)
;
#X obj 89 596 outlet~;
#X text 340 444 (1-R^2)/2;
#X obj 223 89 f \$1;
#X obj 232 68 loadbang;
#X obj 355 90 f \$2;
#X obj 544 90 f \$3;
#X obj 560 67 loadbang;
#X obj 367 68 loadbang;
#X obj 597 337 t b a;
#X obj 429 292 spigot;
#X obj 544 256 select 0;
#X msg 544 281 1;
#X obj 496 450 - 1;
#X text 541 26 scaling;
#X text 430 120 BW=fc/Q;
#X text 354 25 Q;
#X obj 355 142 /;
#X obj 355 115 t b a;
#X obj 223 144 t a a;
#N canvas 0 0 267 205 s 0;
#X obj 65 98 line~;
#X obj 65 77 pack 0 10;
#X obj 65 53 inlet;
#X obj 65 122 outlet~;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 116 347 pd s;
#N canvas 0 0 267 205 s 0;
#X obj 65 98 line~;
#X obj 65 77 pack 0 10;
#X obj 65 53 inlet;
#X obj 65 122 outlet~;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 156 348 pd s;
#N canvas 0 0 267 205 s 0;
#X obj 65 98 line~;
#X obj 65 77 pack 0 10;
#X obj 65 53 inlet;
#X obj 65 122 outlet~;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 124 416 pd s;
#N canvas 0 0 267 205 s 0;
#X obj 65 98 line~;
#X obj 65 77 pack 0 10;
#X obj 65 53 inlet;
#X obj 65 122 outlet~;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 164 417 pd s;
#N canvas 0 0 267 205 s 0;
#X obj 65 98 line~;
#X obj 65 77 pack 0 10;
#X obj 65 53 inlet;
#X obj 65 122 outlet~;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 107 543 pd s;
#X obj 88 566 *~;
#N canvas 228 198 627 317 LICENSE-BSD 0;
#X text 121 56 This software is copyrighted by Miller Puckette \, Reality
Jockey Ltd. and others. The terms (the "Standard Improved BSD License")
apply to all files associated with the software unless explicitly disclaimed
in individual files.;
#X text 123 148 See the file LICENSE.txt for the full license text.
;
#X restore 783 30 pd LICENSE-BSD;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 55 0;
#X connect 2 0 6 0;
#X connect 2 1 7 0;
#X connect 3 0 50 0;
#X connect 3 0 52 0;
#X connect 4 0 5 0;
#X connect 4 0 51 0;
#X connect 5 0 53 0;
#X connect 6 0 3 0;
#X connect 7 0 4 0;
#X connect 8 0 3 0;
#X connect 8 1 3 1;
#X connect 8 2 4 0;
#X connect 8 3 4 1;
#X connect 8 4 40 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 11 0 12 0;
#X connect 12 0 15 0;
#X connect 13 0 54 0;
#X connect 14 0 54 0;
#X connect 14 1 13 0;
#X connect 15 0 14 0;
#X connect 20 0 2 0;
#X connect 21 0 33 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 0 0;
#X connect 25 0 8 0;
#X connect 26 0 35 0;
#X connect 29 0 36 0;
#X connect 33 0 49 0;
#X connect 34 0 33 0;
#X connect 35 0 48 0;
#X connect 36 0 41 0;
#X connect 36 0 40 1;
#X connect 37 0 36 0;
#X connect 38 0 35 0;
#X connect 39 0 15 0;
#X connect 39 1 43 0;
#X connect 40 0 10 0;
#X connect 41 0 42 0;
#X connect 41 1 39 0;
#X connect 42 0 54 0;
#X connect 43 0 14 1;
#X connect 47 0 25 0;
#X connect 48 0 47 0;
#X connect 48 1 47 1;
#X connect 49 0 20 0;
#X connect 49 1 47 0;
#X connect 50 0 0 2;
#X connect 51 0 0 3;
#X connect 52 0 1 2;
#X connect 53 0 1 3;
#X connect 54 0 55 1;
#X connect 55 0 31 0;
