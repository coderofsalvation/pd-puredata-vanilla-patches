#N canvas 407 86 619 794 10;
#X floatatom 128 311 5 0 0 0 - - -;
#X msg 137 151 bang;
#X obj 188 306 print TWO_ITEMS;
#X obj 107 336 print RESULT;
#X msg 144 175 1;
#X msg 152 221 1 2 3;
#X msg 149 197 1 2;
#X msg 155 244 1 2 3 4;
#X text 182 152 redo last list;
#X text 73 22 [u_listreduce];
#X text 188 176 list with only one item will pass unchanged.;
#X symbolatom 101 451 15 0 0 0 - - -;
#X msg 196 420 \$2-\$1;
#X obj 102 634 u_listreduce;
#X msg 102 607 1 2 3 4 5 6 7 8;
#X msg 197 633 \$2 \$1;
#N canvas 209 220 605 355 more-info 0;
#X msg 84 101 bang;
#X obj 126 236 print TWO_ITEMS;
#X obj 54 266 print RESULT;
#X msg 91 125 1;
#X msg 99 171 1 2 3;
#X msg 96 147 1 2;
#X text 36 42 If nothing is connected to the right inlet \, [u_listreduce]
will act like the left and right outlets of [list split 2] reversed.
;
#X obj 54 203 u_listreduce;
#X msg 342 100 bang;
#X obj 385 244 print TWO_ITEMS;
#X obj 312 265 print RESULT;
#X msg 349 124 1;
#X msg 357 170 1 2 3;
#X msg 354 146 1 2;
#X obj 312 202 list split 2;
#X text 178 202 equal to this:;
#X connect 0 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 7 0 2 0;
#X connect 7 1 1 0;
#X connect 8 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 14 0 9 0;
#X connect 14 2 10 0;
#X restore 101 492 pd more-info;
#X obj 102 662 print REVERSE?;
#X obj 101 421 u_listreduce;
#X text 93 64 [u_listreduce] returns a single value constructed by
calling the user-defined objects connected to the right outlet on the
first two items of the sequence \, then on the result (if it comes
in through the right inlet) and the next item of the original list
\, and so on.;
#X obj 107 273 u_listreduce;
#X text 99 532 It's important \, that there will be only one element
coming back in through the right inlet. Lists with more than one item
will be shortened automatically to avoid stack overflows.;
#X text 251 632 <-- two items == bad idea;
#X msg 101 394 a b c d e;
#X obj 329 275 u_listreduce;
#X obj 422 275 min;
#N canvas 0 0 450 300 randlist 0;
#X obj 254 138 random 100;
#X obj 254 116 until;
#X msg 366 138 set;
#X msg 232 61 10;
#X msg 254 160 add2 \$1;
#X obj 232 88 t b f b;
#X obj 255 236 outlet;
#X obj 232 38 inlet;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 5 1 1 0;
#X connect 5 2 2 0;
#X connect 7 0 3 0;
#X restore 329 222 pd randlist;
#X msg 329 248 11 53 38 22 96 97 83 10 20 76;
#X msg 329 202 bang;
#X obj 382 301 u_listreduce;
#X floatatom 382 325 5 0 0 3 max - -;
#X obj 475 301 max;
#X floatatom 329 326 5 0 0 3 min - -;
#X obj 206 273 +;
#X obj 328 457 u_listreduce;
#X floatatom 328 480 5 0 0 0 - - -;
#X msg 328 427 22 31 47 86;
#N canvas 0 0 701 458 compare-two 0;
#X obj 99 12 inlet;
#X obj 99 318 outlet;
#X obj 164 162 abs;
#X obj 99 161 abs;
#X obj 99 41 unpack f f;
#X obj 99 90 t a a;
#X obj 99 272 f;
#X obj 164 90 t a a;
#X obj 131 272 f;
#X obj 99 247 select 1 0;
#X text 178 276 send number with smaller distance back to reduce;
#X text 215 151 calculate distances;
#X obj 99 192 <;
#X obj 217 91 inlet;
#X obj 164 139 -;
#X obj 99 138 -;
#X connect 0 0 4 0;
#X connect 2 0 12 1;
#X connect 3 0 12 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 15 0;
#X connect 5 1 6 1;
#X connect 6 0 1 0;
#X connect 7 0 14 0;
#X connect 7 1 8 1;
#X connect 8 0 1 0;
#X connect 9 0 6 0;
#X connect 9 1 8 0;
#X connect 12 0 9 0;
#X connect 13 0 14 1;
#X connect 13 0 15 1;
#X connect 14 0 2 0;
#X connect 15 0 3 0;
#X restore 424 457 pd compare-two;
#X floatatom 517 438 5 0 0 0 - - -;
#X msg 517 415 45;
#X obj 517 392 loadbang;
#X text 325 390 Find closest element:;
#X connect 1 0 20 0;
#X connect 4 0 20 0;
#X connect 5 0 20 0;
#X connect 6 0 20 0;
#X connect 7 0 20 0;
#X connect 12 0 18 1;
#X connect 13 0 17 0;
#X connect 13 1 15 0;
#X connect 14 0 13 0;
#X connect 15 0 13 1;
#X connect 18 0 11 0;
#X connect 18 1 12 0;
#X connect 20 0 0 0;
#X connect 20 0 3 0;
#X connect 20 1 2 0;
#X connect 20 1 33 0;
#X connect 23 0 18 0;
#X connect 24 0 32 0;
#X connect 24 1 25 0;
#X connect 25 0 24 1;
#X connect 26 0 27 0;
#X connect 27 0 24 0;
#X connect 27 0 29 0;
#X connect 28 0 26 0;
#X connect 29 0 30 0;
#X connect 29 1 31 0;
#X connect 31 0 29 1;
#X connect 33 0 20 1;
#X connect 34 0 35 0;
#X connect 34 1 37 0;
#X connect 36 0 34 0;
#X connect 37 0 34 1;
#X connect 38 0 37 1;
#X connect 39 0 38 0;
#X connect 40 0 39 0;
